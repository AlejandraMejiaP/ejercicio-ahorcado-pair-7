{"ast":null,"code":"var _jsxFileName = \"/home/adalaber/Escritorio/ejercicios de adalab/modulo 3/ejercicio-ahorcado-pair-7/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/App.scss\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let word = \"patata\";\n  const [chart, setChart] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n\n  const renderSolutionLetters = () => {\n    const wordLetters = word.split(\"\");\n\n    for (const letter of wordLetters) {}\n\n    return wordLetters.map((letter, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"letter\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const handleLastLetter = ev => {\n    ev.preventDefault();\n    let lastInput = ev.currentTarget.value;\n\n    if (lastInput.match(\"^[a-zA-ZáäéëíïóöúüÁÄÉËÍÏÓÖÚÜñÑ]?$\")) {\n      numberOfErrors(ev);\n      setChart(ev.currentTarget.value);\n    }\n  };\n\n  const numberOfErrors = ev => {\n    ev.preventDefault();\n\n    if (ev.keyCode === 8) {\n      setCounter(counter);\n    } else {\n      setCounter(counter + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header__title\",\n          children: \"Juego del ahorcado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"title\",\n              children: \"Soluci\\xF3n:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"letters\",\n              children: renderSolutionLetters()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"title\",\n              children: \"Letras falladas:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"letters\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"letter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"letter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"letter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"letter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"letter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"title\",\n              htmlFor: \"last-letter\",\n              children: \"Escribe una letra:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: chart,\n              onChange: handleLastLetter,\n              autoComplete: \"off\",\n              className: \"form__input\",\n              maxLength: \"1\",\n              type: \"text\",\n              name: \"last-letter\",\n              id: \"last-letter\",\n              pattern: \"^[a-zA-Z\\xE1\\xE4\\xE9\\xEB\\xED\\xEF\\xF3\\xF6\\xFA\\xFC\\xC1\\xC4\\xC9\\xCB\\xCD\\xCF\\xD3\\xD6\\xDA\\xDC\\xF1\\xD1]?$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: `dummy error-${counter}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-13 eye\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-12 eye\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-11 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-10 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-9 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-8 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-7 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-6 head\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-5 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-4 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-3 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-2 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-1 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"ZiHb6HNKHFEhm4ao03+uTq42XoE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adalaber/Escritorio/ejercicios de adalab/modulo 3/ejercicio-ahorcado-pair-7/src/components/App.js"],"names":["useState","App","word","chart","setChart","counter","setCounter","renderSolutionLetters","wordLetters","split","letter","map","index","handleLastLetter","ev","preventDefault","lastInput","currentTarget","value","match","numberOfErrors","keyCode"],"mappings":"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","sourcesContent":["import \"../styles/App.scss\";\nimport { useState } from \"react\";\n\nfunction App() {\n  let word = \"patata\";\n  const [chart, setChart] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n\n  const renderSolutionLetters = () => {\n    const wordLetters = word.split(\"\");\n    for (const letter of wordLetters) {\n      }\n    return wordLetters.map((letter, index) => {\n      return <li key={index} className=\"letter\"></li>;\n    });\n  };\n  const handleLastLetter = (ev) => {\n    ev.preventDefault();\n    let lastInput = ev.currentTarget.value;\n     if (lastInput.match(\"^[a-zA-ZáäéëíïóöúüÁÄÉËÍÏÓÖÚÜñÑ]?$\")) {     \n      numberOfErrors(ev); \n      setChart(ev.currentTarget.value);     \n    }    \n  };\n  const numberOfErrors = (ev) => {\n    ev.preventDefault();\n    if (ev.keyCode === 8) {\n      setCounter(counter);\n    } else{\n    setCounter(counter + 1)}\n  };\n  \n  return (\n    <>\n      <div className=\"page\">\n        <header>\n          <h1 className=\"header__title\">Juego del ahorcado</h1>\n        </header>\n        <main className=\"main\">\n          <section>\n            <div className=\"solution\">\n              <h2 className=\"title\">Solución:</h2>\n              <ul className=\"letters\">\n                {renderSolutionLetters()}\n                {/* <li className=\"letter\">p</li>\n                <li className=\"letter\">a</li>\n                <li className=\"letter\"></li>\n                <li className=\"letter\">a</li>\n                <li className=\"letter\"></li>\n                <li className=\"letter\">a</li> */}\n              </ul>\n            </div>\n            <div className=\"error\">\n              <h2 className=\"title\">Letras falladas:</h2>\n              <ul className=\"letters\">\n                <li className=\"letter\"></li>\n                <li className=\"letter\"></li>\n                <li className=\"letter\"></li>\n                <li className=\"letter\"></li>\n                <li className=\"letter\"></li>\n              </ul>\n            </div>\n            <form className=\"form\">\n              <label className=\"title\" htmlFor=\"last-letter\">\n                Escribe una letra:\n              </label>\n              <input\n                value={chart}\n                onChange={handleLastLetter}\n                autoComplete=\"off\"\n                className=\"form__input\"\n                maxLength=\"1\"\n                type=\"text\"\n                name=\"last-letter\"\n                id=\"last-letter\"\n                pattern=\"^[a-zA-ZáäéëíïóöúüÁÄÉËÍÏÓÖÚÜñÑ]?$\"\n              />\n            </form>\n          </section>\n          <section className={`dummy error-${counter}`}>\n            <span className=\"error-13 eye\"></span>\n            <span className=\"error-12 eye\"></span>\n            <span className=\"error-11 line\"></span>\n            <span className=\"error-10 line\"></span>\n            <span className=\"error-9 line\"></span>\n            <span className=\"error-8 line\"></span>\n            <span className=\"error-7 line\"></span>\n            <span className=\"error-6 head\"></span>\n            <span className=\"error-5 line\"></span>\n            <span className=\"error-4 line\"></span>\n            <span className=\"error-3 line\"></span>\n            <span className=\"error-2 line\"></span>\n            <span className=\"error-1 line\"></span>\n          </section>\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}