{"ast":null,"code":"var _jsxFileName = \"/home/adalaber/Escritorio/ejercicios de adalab/modulo 3/ejercicio-ahorcado-pair-7/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/App.scss\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let keyword = \"patata\";\n  const [chart, setChart] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [correctLetters, setCorrectLetters] = useState([]);\n\n  const renderSolutionLetters = () => {\n    for (const eachletter of correctLetters) {\n      const wordLetters = keyword.split(\"\");\n      return wordLetters.map((letter, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"letter\",\n          children: eachletter\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this);\n      });\n    }\n  };\n\n  const renderWrongLetters = () => {\n    return wrongLetters.map((error, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"letters\",\n        children: error\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const numberOfErrors = ev => {\n    ev.preventDefault();\n\n    if (ev.keyCode === 8) {\n      setCounter(counter);\n    } else {\n      setCounter(counter + 1);\n    }\n\n    console.log(counter);\n  };\n\n  console.log(wrongLetters);\n  console.log(correctLetters);\n\n  const handleLastLetter = ev => {\n    ev.preventDefault();\n    let lastInput = ev.currentTarget.value;\n\n    if (lastInput.match(\"^[a-zA-ZáäéëíïóöúüÁÄÉËÍÏÓÖÚÜñÑ]?$\")) {\n      numberOfErrors(ev);\n      setChart(lastInput);\n      handleWrongLetters(ev);\n\n      if (lastInput !== \"\") {\n        if (keyword.includes(lastInput)) {\n          setCorrectLetters([...correctLetters, lastInput]);\n          console.log(\"acierto\");\n        } else {\n          console.log(\"error\");\n          setWrongLetters([...wrongLetters, lastInput]);\n          ;\n        }\n      }\n    }\n  };\n\n  const handleWrongLetters = ev => {\n    ev.preventDefault();\n    let error = ev.currentTarget.value;\n    setWrongLetters(error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header__title\",\n          children: \"Juego del ahorcado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"title\",\n              children: \"Soluci\\xF3n:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"letters\",\n              children: renderSolutionLetters()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"title\",\n              children: \"Letras falladas:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"title\",\n              htmlFor: \"last-letter\",\n              children: \"Escribe una letra:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: chart,\n              onChange: handleLastLetter,\n              autoComplete: \"off\",\n              className: \"form__input\",\n              maxLength: \"1\",\n              type: \"text\",\n              name: \"last-letter\",\n              id: \"last-letter\",\n              pattern: \"^[a-zA-Z\\xE1\\xE4\\xE9\\xEB\\xED\\xEF\\xF3\\xF6\\xFA\\xFC\\xC1\\xC4\\xC9\\xCB\\xCD\\xCF\\xD3\\xD6\\xDA\\xDC\\xF1\\xD1]?$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: `dummy error-${counter}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-13 eye\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-12 eye\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-11 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-10 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-9 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-8 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-7 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-6 head\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-5 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-4 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-3 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-2 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-1 line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"wYH+uhjEaMSTp8oBbfjw0OVradY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adalaber/Escritorio/ejercicios de adalab/modulo 3/ejercicio-ahorcado-pair-7/src/components/App.js"],"names":["useState","App","keyword","chart","setChart","counter","setCounter","wrongLetters","setWrongLetters","correctLetters","setCorrectLetters","renderSolutionLetters","eachletter","wordLetters","split","map","letter","index","renderWrongLetters","error","numberOfErrors","ev","preventDefault","keyCode","console","log","handleLastLetter","lastInput","currentTarget","value","match","handleWrongLetters","includes"],"mappings":"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","sourcesContent":["import \"../styles/App.scss\";\nimport { useState } from \"react\";\n\nfunction App() {\n  let keyword = \"patata\";\n  const [chart, setChart] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [correctLetters, setCorrectLetters] = useState([]);\n\n  const renderSolutionLetters = () => {\n    for (const eachletter of correctLetters) {\n      \n    \n    const wordLetters = keyword.split(\"\");\n    return wordLetters.map((letter, index) => {\n      return <li key={index} className=\"letter\">{eachletter}</li>;\n    });}\n  };\n\n  const renderWrongLetters = () => {\n    return wrongLetters.map((error, index) => {\n      return <li key={index} className=\"letters\">{error}</li>;\n    });\n  };\n\n  const numberOfErrors = (ev) => {\n    ev.preventDefault();\n    if (ev.keyCode === 8) {\n      setCounter(counter);\n    } else {\n      setCounter(counter + 1);\n    }\n    console.log(counter);\n  };\n  console.log(wrongLetters)\n  console.log(correctLetters);\n  const handleLastLetter = (ev) => {\n    ev.preventDefault();\n    let lastInput = ev.currentTarget.value;\n    if (lastInput.match(\"^[a-zA-ZáäéëíïóöúüÁÄÉËÍÏÓÖÚÜñÑ]?$\")) {\n      numberOfErrors(ev);\n      setChart(lastInput);\n      handleWrongLetters(ev); \n      if (lastInput !== \"\") {\n        if (keyword.includes(lastInput)) {  \n          setCorrectLetters([...correctLetters, lastInput]);       \n          console.log(\"acierto\");\n        } else {         \n          console.log(\"error\");\n          setWrongLetters([...wrongLetters, lastInput]);\n         ;\n        }\n      }\n    }\n  };\n  const handleWrongLetters = (ev) => {\n    ev.preventDefault();\n    let error = ev.currentTarget.value;\n    setWrongLetters(error);\n  };\n\n  return (\n    <>\n      <div className=\"page\">\n        <header>\n          <h1 className=\"header__title\">Juego del ahorcado</h1>\n        </header>\n        <main className=\"main\">\n          <section>\n            <div className=\"solution\">\n              <h2 className=\"title\">Solución:</h2>\n              <ul className=\"letters\">{renderSolutionLetters()}</ul>\n            </div>\n            <div className=\"error\">\n              <h2 className=\"title\">Letras falladas:</h2>\n              {/* <ul className=\"letters\">{renderWrongLetters()}</ul> */}\n            </div>\n            <form className=\"form\">\n              <label className=\"title\" htmlFor=\"last-letter\">\n                Escribe una letra:\n              </label>\n              <input\n                value={chart}\n                onChange={handleLastLetter}\n                autoComplete=\"off\"\n                className=\"form__input\"\n                maxLength=\"1\"\n                type=\"text\"\n                name=\"last-letter\"\n                id=\"last-letter\"\n                pattern=\"^[a-zA-ZáäéëíïóöúüÁÄÉËÍÏÓÖÚÜñÑ]?$\"\n              />\n            </form>\n          </section>\n          <section className={`dummy error-${counter}`}>\n            <span className=\"error-13 eye\"></span>\n            <span className=\"error-12 eye\"></span>\n            <span className=\"error-11 line\"></span>\n            <span className=\"error-10 line\"></span>\n            <span className=\"error-9 line\"></span>\n            <span className=\"error-8 line\"></span>\n            <span className=\"error-7 line\"></span>\n            <span className=\"error-6 head\"></span>\n            <span className=\"error-5 line\"></span>\n            <span className=\"error-4 line\"></span>\n            <span className=\"error-3 line\"></span>\n            <span className=\"error-2 line\"></span>\n            <span className=\"error-1 line\"></span>\n          </section>\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}